@page "/cities"
@using LocalServicesDirectory.Web.Services
@inject ServiceApiClient Api

<h3 class="mb-3">Ciudades</h3>

<div class="d-flex gap-2 mb-3">
    <input class="form-control" placeholder="Nombre..." @bind="form.Name" />
    <button class="btn btn-success"
            @onclick="Save"
            disabled="@string.IsNullOrWhiteSpace(form.Name)">
        @(editingId is null ? "Crear" : "Guardar")
    </button>
    @if (editingId is not null)
    {
        <button class="btn btn-secondary" @onclick="Cancel">Cancelar</button>
    }
</div>

@if (items.Count == 0)
{
    <p>No hay ciudades.</p>
}
else
{
    <table class="table table-striped">
        <thead><tr><th>Nombre</th><th class="text-end">Acciones</th></tr></thead>
        <tbody>
            @foreach (var c in items)
            {
                <tr>
                    <td>@c.Name</td>
                    <td class="text-end">
                        <button class="btn btn-sm btn-outline-primary" @onclick="() => Edit(c)">Editar</button>
                        <button class="btn btn-sm btn-outline-danger ms-2" @onclick="() => Remove(c.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<ServiceApiClient.CityDto> items = new();
    ServiceApiClient.CreateOrUpdateCityDto form = new();
    Guid? editingId;

    protected override async Task OnInitializedAsync() => await Load();

    async Task Load() => items = await Api.GetCitiesAsync();

    void Edit(ServiceApiClient.CityDto c)
    {
        editingId = c.Id;
        form = new() { Name = c.Name };
    }

    void Cancel()
    {
        editingId = null;
        form = new();
    }

    async Task Save()
    {
        if (string.IsNullOrWhiteSpace(form.Name)) return;

        bool ok = editingId is null
            ? await Api.CreateCityAsync(form)
            : await Api.UpdateCityAsync(editingId.Value, form);

        if (ok) { Cancel(); await Load(); }
    }

    async Task Remove(Guid id)
    {
        if (await Api.DeleteCityAsync(id)) await Load();
    }
}
